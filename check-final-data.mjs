import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  try {
    const weekIso = '2025-W42';
    
    console.log('üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –î–ê–ù–ù–´–•\n');
    console.log(`üìÖ –ù–µ–¥–µ–ª—è: ${weekIso}\n`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—á–µ—Ç—ã
    const reports = await prisma.weeklyReport.findMany({
      where: { weekIso },
      include: { user: true, hrMetrics: true, opsMetrics: true }
    });

    console.log(`‚úÖ –û—Ç—á–µ—Ç–æ–≤: ${reports.length}`);
    
    if (reports.length > 0) {
      console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –ë–î\n`);
      
      // –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      const hrCount = reports.filter(r => r.hrMetrics).length;
      const opsCount = reports.filter(r => r.opsMetrics).length;
      const totalMessages = reports.reduce((sum, r) => sum + (r.opsMetrics?.messages || 0), 0);
      const totalOrders = reports.reduce((sum, r) => sum + (r.opsMetrics?.orders || 0), 0);
      const totalHired = reports.reduce((sum, r) => sum + (r.hrMetrics?.registrations || 0), 0);
      
      console.log(`üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
      console.log(`   HR –º–µ—Ç—Ä–∏–∫–∏: ${hrCount}`);
      console.log(`   OPS –º–µ—Ç—Ä–∏–∫–∏: ${opsCount}`);
      console.log(`   –°–æ–æ–±—â–µ–Ω–∏—è: ${totalMessages}`);
      console.log(`   –ó–∞–∫–∞–∑—ã: ${totalOrders}`);
      console.log(`   –ù–∞–Ω—è—Ç–æ: ${totalHired}\n`);
      
      console.log(`üü¢ –í–°–ï –î–ê–ù–ù–´–ï –ì–û–¢–û–í–´ –ö –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Æ`);
    } else {
      console.log(`‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!`);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

main();
