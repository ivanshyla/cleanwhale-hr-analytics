/**
 * Debug Endpoints Guard
 * 
 * –ó–∞—â–∏—â–∞–µ—Ç debug endpoints –æ—Ç –¥–æ—Å—Ç—É–ø–∞ –≤ production –æ–∫—Ä—É–∂–µ–Ω–∏–∏
 */

import { NextResponse } from 'next/server';

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ –¥–æ—Å—Ç—É–ø –∫ debug endpoints
 * –í production —Ä–µ–∂–∏–º–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 403 –æ—à–∏–±–∫—É
 */
export function guardDebugEndpoint(): NextResponse | null {
  if (process.env.NODE_ENV === 'production') {
    return NextResponse.json(
      { 
        error: 'Debug endpoints are not available in production',
        message: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω –≤ production —Ä–µ–∂–∏–º–µ' 
      },
      { status: 403 }
    );
  }
  
  return null; // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –≤ development
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –º—ã –≤ development —Ä–µ–∂–∏–º–µ
 */
export function isDevelopment(): boolean {
  return process.env.NODE_ENV !== 'production';
}

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ debug endpoint
 */
export function logDebugAccess(endpoint: string, action: string): void {
  if (!isDevelopment()) {
    console.warn(`‚ö†Ô∏è Attempted access to debug endpoint in production: ${endpoint} - ${action}`);
  } else {
    console.log(`üîß Debug endpoint accessed: ${endpoint} - ${action}`);
  }
}


