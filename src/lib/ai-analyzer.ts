import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

interface AnalysisData {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  totalRevenue: number;
  totalOrders: number;
  totalHires: number;
  activeEmployees: number;
  
  // –¢—Ä–µ–Ω–¥—ã —Ä–æ—Å—Ç–∞
  revenueGrowth: number;
  ordersGrowth: number;
  hiresGrowth: number;
  clientsGrowth: number;
  
  // –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  customerSatisfaction: number;
  employeeSatisfaction: number;
  avgStressLevel: number;
  overtimeRate: number;
  turnoverRate: number;
  
  // –î–∞–Ω–Ω—ã–µ –ø–æ –≥–æ—Ä–æ–¥–∞–º
  cityData: Record<string, {
    orders: number;
    revenue: number;
    hires: number;
    employees: number;
    satisfaction: number;
  }>;
  
  // –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  avgResponseTime: number;
  orderCompletionRate: number;
  qualityScore: number;
  complaintRate: number;
  
  // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
  weeklyProfit: number;
  marketingSpend: number;
  costPerHire: number;
  costPerOrder: number;
  
  // –¢–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  majorIssues?: string;
  challenges?: string;
  achievements?: string;
  weekNumber: number;
  reportDate: string;
}

export class AIAnalyzer {
  
  /**
   * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –±–∏–∑–Ω–µ—Å–∞
   */
  async generateExecutiveSummary(data: AnalysisData): Promise<string> {
    const prompt = `
–¢—ã - –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–ª—è –ø–æ–ª—å—Å–∫–æ–π –∫–ª–∏–Ω–∏–Ω–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∑–∞ –Ω–µ–¥–µ–ª—é ${data.weekNumber} –∏ —Å–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –±–∏–∑–Ω–µ—Å–∞.

–î–ê–ù–ù–´–ï –ó–ê –ù–ï–î–ï–õ–Æ:
üìä –û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:
- –í—ã—Ä—É—á–∫–∞: ${data.totalRevenue} PLN (—Ä–æ—Å—Ç: ${data.revenueGrowth}%)
- –ó–∞–∫–∞–∑—ã: ${data.totalOrders} (—Ä–æ—Å—Ç: ${data.ordersGrowth}%)
- –ù–∞–π–º: ${data.totalHires} —á–µ–ª–æ–≤–µ–∫ (—Ä–æ—Å—Ç: ${data.hiresGrowth}%)
- –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: ${data.activeEmployees}

üí∞ –§–∏–Ω–∞–Ω—Å—ã:
- –ü—Ä–∏–±—ã–ª—å –∑–∞ –Ω–µ–¥–µ–ª—é: ${data.weeklyProfit} PLN
- –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã: ${data.marketingSpend} PLN
- –°—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–π–º–∞: ${data.costPerHire} PLN
- –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞: ${data.costPerOrder} PLN

üë• –ö–∞—á–µ—Å—Ç–≤–æ:
- –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: ${data.customerSatisfaction}/10
- –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${data.employeeSatisfaction}/10
- –£—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞: ${data.avgStressLevel}/10
- –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏: ${data.overtimeRate}%
- –¢–µ–∫—É—á–µ—Å—Ç—å –∫–∞–¥—Ä–æ–≤: ${data.turnoverRate}%

‚ö° –û–ø–µ—Ä–∞—Ü–∏–∏:
- –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${data.avgResponseTime} —á–∞—Å–æ–≤
- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤: ${data.orderCompletionRate}%
- –ö–∞—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥: ${data.qualityScore}/10
- –ñ–∞–ª–æ–±—ã: ${data.complaintRate}%

üèôÔ∏è –ü–æ –≥–æ—Ä–æ–¥–∞–º:
${Object.entries(data.cityData).map(([city, cityInfo]) => 
  `${city}: ${cityInfo.orders} –∑–∞–∫–∞–∑–æ–≤, ${cityInfo.revenue} PLN, ${cityInfo.hires} –Ω–∞–π–º–∞`
).join('\n')}

${data.majorIssues ? `‚ùó –ü—Ä–æ–±–ª–µ–º—ã: ${data.majorIssues}` : ''}
${data.achievements ? `üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: ${data.achievements}` : ''}

–°–û–ó–î–ê–ô –û–¢–ß–ï–¢ –í –°–õ–ï–î–£–Æ–©–ï–ú –§–û–†–ú–ê–¢–ï:

## üìà –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ - –ù–µ–¥–µ–ª—è ${data.weekNumber}

### üî• –ö–ª—é—á–µ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
[3-4 –≥–ª–∞–≤–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏]

### üí° –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã
[–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –≤–∞–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π]

### ‚ö†Ô∏è –û–±–ª–∞—Å—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏—è
[–ü—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç —Ä–µ—à–µ–Ω–∏—è]

### üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
[–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è]

### üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–æ—à–ª–æ–π –Ω–µ–¥–µ–ª–µ–π
[–ß—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –∏ –ø–æ—á–µ–º—É]

–ü–∏—à–∏ –¥–µ–ª–æ–≤—ã–º, –Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–º —è–∑—ã–∫–æ–º. –§–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ ROI, —Ä–æ—Å—Ç–µ –±–∏–∑–Ω–µ—Å–∞ –∏ –∫–ª—é—á–µ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö.
`;

    try {
      const completion = await openai.chat.completions.create({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: "–¢—ã - –æ–ø—ã—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∫–ª–∏–Ω–∏–Ω–≥–æ–≤—ã—Ö —É—Å–ª—É–≥–∞—Ö –≤ –ü–æ–ª—å—à–µ. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞–≤–∞—Ç—å —á–µ—Ç–∫–∏–µ, –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –±–∏–∑–Ω–µ—Å–∞."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: 1500,
        temperature: 0.7,
      });

      return completion.choices[0]?.message?.content || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞';
    } catch (error) {
      console.error('Error generating executive summary:', error);
      throw error;
    }
  }

  /**
   * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å–∞–π—Ç—ã –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ
   */
  async generateManagerInsights(data: AnalysisData): Promise<{
    insights: string[];
    correlations: string[];
    anomalies: string[];
    recommendations: string[];
  }> {
    const prompt = `
–¢—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ –ø–æ–ª—å—Å–∫–æ–π –∫–ª–∏–Ω–∏–Ω–≥–æ–≤–æ–π –∫–æ–º–ø–∞–Ω–∏–∏. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞–π–¥–∏:

–î–ê–ù–ù–´–ï:
${JSON.stringify(data, null, 2)}

–ù–∞–π–¥–∏:
1. –ù–ï–û–ë–´–ß–ù–´–ï –ü–ê–¢–¢–ï–†–ù–´ (–∞–Ω–æ–º–∞–ª–∏–∏ –≤ –¥–∞–Ω–Ω—ã—Ö)
2. –í–ó–ê–ò–ú–û–°–í–Ø–ó–ò (–∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –º–µ—Ç—Ä–∏–∫–∞–º–∏)
3. –ò–ù–°–ê–ô–¢–´ (—Å–∫—Ä—ã—Ç—ã–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏)
4. –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò (—á—Ç–æ –¥–µ–ª–∞—Ç—å)

–û—Ç–≤–µ—á–∞–π –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "insights": ["–∏–Ω—Å–∞–π—Ç 1", "–∏–Ω—Å–∞–π—Ç 2", ...],
  "correlations": ["—Å–≤—è–∑—å 1", "—Å–≤—è–∑—å 2", ...],
  "anomalies": ["–∞–Ω–æ–º–∞–ª–∏—è 1", "–∞–Ω–æ–º–∞–ª–∏—è 2", ...],
  "recommendations": ["—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1", "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2", ...]
}

–ü—Ä–∏–º–µ—Ä—ã –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π:
- "–í—ã—Å–æ–∫–∏–π —Å—Ç—Ä–µ—Å—Å (${data.avgStressLevel}/10) –∫–æ—Ä—Ä–µ–ª–∏—Ä—É–µ—Ç —Å –Ω–∏–∑–∫–∏–º –Ω–∞–π–º–æ–º (${data.totalHires} —á–µ–ª)"
- "–ì–æ—Ä–æ–¥–∞ —Å –≤—ã—Å–æ–∫–æ–π —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ª—É—á—à–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"

–ò—â–∏ –Ω–µ–æ—á–µ–≤–∏–¥–Ω—ã–µ —Å–≤—è–∑–∏!
`;

    try {
      const completion = await openai.chat.completions.create({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: "–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –≤—ã—è–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π –∏ –∞–Ω–æ–º–∞–ª–∏–π –≤ HR –∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: 1000,
        temperature: 0.3,
        response_format: { type: "json_object" }
      });

      const result = JSON.parse(completion.choices[0]?.message?.content || '{}');
      return {
        insights: result.insights || [],
        correlations: result.correlations || [],
        anomalies: result.anomalies || [],
        recommendations: result.recommendations || [],
      };
    } catch (error) {
      console.error('Error generating manager insights:', error);
      return {
        insights: ['–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö'],
        correlations: [],
        anomalies: [],
        recommendations: [],
      };
    }
  }

  /**
   * –ü—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–µ–Ω–¥—ã –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
   */
  async predictNextWeekTrends(historicalData: AnalysisData[]): Promise<{
    predictions: Record<string, number>;
    confidence: number;
    reasoning: string;
  }> {
    const prompt = `
–û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ–¥–µ–ª–∏, –ø—Ä–µ–¥—Å–∫–∞–∂–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é:

–ò–°–¢–û–†–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï:
${JSON.stringify(historicalData, null, 2)}

–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–µ–Ω–¥—ã –∏ –¥–∞–π –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è:
- totalRevenue
- totalOrders  
- totalHires
- customerSatisfaction
- avgStressLevel

–û—Ç–≤–µ—á–∞–π –≤ JSON:
{
  "predictions": {
    "totalRevenue": —á–∏—Å–ª–æ,
    "totalOrders": —á–∏—Å–ª–æ,
    "totalHires": —á–∏—Å–ª–æ,
    "customerSatisfaction": —á–∏—Å–ª–æ,
    "avgStressLevel": —á–∏—Å–ª–æ
  },
  "confidence": —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100,
  "reasoning": "–æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞"
}
`;

    try {
      const completion = await openai.chat.completions.create({
        model: "gpt-4o",
        messages: [
          {
            role: "system",
            content: "–¢—ã - –∞–Ω–∞–ª–∏—Ç–∏–∫-–ø—Ä–æ–≥–Ω–æ–∑–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–∏ –±–∏–∑–Ω–µ—Å-–º–µ—Ç—Ä–∏–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        max_tokens: 800,
        temperature: 0.2,
        response_format: { type: "json_object" }
      });

      const result = JSON.parse(completion.choices[0]?.message?.content || '{}');
      return {
        predictions: result.predictions || {},
        confidence: result.confidence || 0,
        reasoning: result.reasoning || '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞',
      };
    } catch (error) {
      console.error('Error predicting trends:', error);
      return {
        predictions: {},
        confidence: 0,
        reasoning: '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞',
      };
    }
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è
   */
  async identifyCriticalIssues(data: AnalysisData): Promise<{
    critical: string[];
    medium: string[];
    recommendations: string[];
  }> {
    const criticalIssues = [];
    const mediumIssues = [];
    const recommendations = [];

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if (data.revenueGrowth < -15) {
      criticalIssues.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –ø–∞–¥–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏: ${data.revenueGrowth.toFixed(1)}%`);
      recommendations.push('–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏—á–∏–Ω—ã –ø–∞–¥–µ–Ω–∏—è –≤—ã—Ä—É—á–∫–∏ –∏ –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã');
    }

    if (data.customerSatisfaction < 5) {
      criticalIssues.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∑–∫–∞—è —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤: ${data.customerSatisfaction}/10`);
      recommendations.push('–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å—Ä–æ—á–Ω—ã–π –∞—É–¥–∏—Ç –∫–∞—á–µ—Å—Ç–≤–∞ —É—Å–ª—É–≥');
    }

    if (data.avgStressLevel > 8) {
      criticalIssues.push(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: ${data.avgStressLevel}/10`);
      recommendations.push('–ü—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –ø–æ —Å–Ω–∏–∂–µ–Ω–∏—é —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏');
    }

    if (data.turnoverRate > 25) {
      criticalIssues.push(`–í—ã—Å–æ–∫–∞—è —Ç–µ–∫—É—á–µ—Å—Ç—å –∫–∞–¥—Ä–æ–≤: ${data.turnoverRate}%`);
      recommendations.push('–ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å HR-–ø–æ–ª–∏—Ç–∏–∫—É –∏ —É—Å–ª–æ–≤–∏—è —Ç—Ä—É–¥–∞');
    }

    if (data.ordersGrowth < -10) {
      mediumIssues.push(`–ü–∞–¥–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤: ${data.ordersGrowth.toFixed(1)}%`);
    }

    if (data.avgResponseTime > 4) {
      mediumIssues.push(`–ú–µ–¥–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${data.avgResponseTime} —á–∞—Å–æ–≤`);
    }

    if (data.complaintRate > 15) {
      mediumIssues.push(`–í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∂–∞–ª–æ–±: ${data.complaintRate}%`);
    }

    // AI –∞–Ω–∞–ª–∏–∑ –¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
    const aiInsights = await this.generateManagerInsights(data);
    
    return {
      critical: criticalIssues,
      medium: mediumIssues.concat(aiInsights.anomalies),
      recommendations: recommendations.concat(aiInsights.recommendations),
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π email-–æ—Ç—á–µ—Ç
   */
  async generateEmailReport(data: AnalysisData, recipientType: 'owner' | 'manager'): Promise<{
    subject: string;
    body: string;
    priority: 'low' | 'medium' | 'high';
  }> {
    let subject: string;
    let body: string;
    let priority: 'low' | 'medium' | 'high' = 'medium';

    if (recipientType === 'owner') {
      const executiveSummary = await this.generateExecutiveSummary(data);
      
      subject = `üìä –ù–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç (–ù–µ–¥–µ–ª—è ${data.weekNumber}) - `;
      if (data.revenueGrowth > 0) {
        subject += `–†–æ—Å—Ç ${data.revenueGrowth.toFixed(1)}%`;
        priority = 'low';
      } else if (data.revenueGrowth < -10) {
        subject += `–í–ù–ò–ú–ê–ù–ò–ï: –ü–∞–¥–µ–Ω–∏–µ ${Math.abs(data.revenueGrowth).toFixed(1)}%`;
        priority = 'high';
      } else {
        subject += `–°—Ç–∞–±–∏–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏`;
        priority = 'medium';
      }

      body = `
–î–æ–±—Ä—ã–π –¥–µ–Ω—å!

${executiveSummary}

---
–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
–î–∞—Ç–∞: ${new Date(data.reportDate).toLocaleDateString('ru-RU')}
      `.trim();

    } else {
      // –î–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ
      const insights = await this.generateManagerInsights(data);
      const issues = await this.identifyCriticalIssues(data);

      subject = `üîç –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–ù–µ–¥–µ–ª—è ${data.weekNumber})`;
      
      if (issues.critical.length > 0) {
        subject += ` - –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø`;
        priority = 'high';
      }

      body = `
–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ:

## üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã:
${issues.critical.length > 0 ? issues.critical.map(issue => `‚Ä¢ ${issue}`).join('\n') : '‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ'}

## üîç –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã:
${insights.insights.map(insight => `‚Ä¢ ${insight}`).join('\n')}

## üîó –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏:
${insights.correlations.map(corr => `‚Ä¢ ${corr}`).join('\n')}

## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
${issues.recommendations.map(rec => `‚Ä¢ ${rec}`).join('\n')}

---
–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ | ${new Date(data.reportDate).toLocaleDateString('ru-RU')}
      `.trim();
    }

    return { subject, body, priority };
  }
}

export const aiAnalyzer = new AIAnalyzer();
