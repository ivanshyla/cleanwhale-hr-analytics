'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { useForm } from 'react-hook-form';
import { Calendar, Save, TrendingUp, Globe, MapPin, DollarSign, AlertTriangle, Target } from 'lucide-react';

interface CountryReportFormData {
  reportDate: string;
  
  // –û–ë–©–ò–ï –î–ê–ù–ù–´–ï –ü–û –°–¢–†–ê–ù–ï
  totalWorkingDaysCountry?: number;
  totalEmployeesActive?: number;
  
  // –î–ê–ù–ù–´–ï –ü–û –ì–û–†–û–î–ê–ú
  warsawWorkingDays?: number;
  krakowWorkingDays?: number;
  gdanskWorkingDays?: number;
  wroc≈ÇawWorkingDays?: number;
  poznanWorkingDays?: number;
  lodzWorkingDays?: number;
  
  warsawEmployees?: number;
  krakowEmployees?: number;
  gdanskEmployees?: number;
  wroc≈ÇawEmployees?: number;
  poznanEmployees?: number;
  lodzEmployees?: number;
  
  warsawNotes?: string;
  krakowNotes?: string;
  gdanskNotes?: string;
  wroc≈ÇawNotes?: string;
  poznanNotes?: string;
  lodzNotes?: string;
  
  // –û–ë–©–ò–ï –ú–ï–¢–†–ò–ö–ò –ü–û –°–¢–†–ê–ù–ï
  countryTotalOrders?: number;
  countryTotalHires?: number;
  countryAvgStress?: number;
  countryOvertimeRate?: number;
  
  // –°–¢–†–ê–¢–ï–ì–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï
  marketingCampaigns?: string;
  competitorAnalysis?: string;
  strategicGoals?: string;
  budgetSpent?: number;
  
  // –ü–†–û–ë–õ–ï–ú–´ –ò –†–ï–®–ï–ù–ò–Ø
  majorIssues?: string;
  solutionsImplemented?: string;
  riskAssessment?: string;
  
  notes?: string;
}

export default function CountryReportPage() {
  const [user, setUser] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);
  const router = useRouter();
  
  const { register, handleSubmit, watch, setValue, formState: { errors } } = useForm<CountryReportFormData>({
    defaultValues: {
      reportDate: new Date().toISOString().split('T')[0],
    }
  });

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    const token = localStorage.getItem('token');
    if (!token) {
      router.push('/login');
      return;
    }

    try {
      const payload = JSON.parse(atob(token.split('.')[1]));
      if (payload.role !== 'COUNTRY_MANAGER') {
        alert('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–µ.');
        router.push('/dashboard');
        return;
      }
      
      setUser({
        id: payload.userId,
        email: payload.email,
        role: payload.role,
        city: payload.city,
      });
    } catch (error) {
      console.error('Invalid token:', error);
      router.push('/login');
    }
  }, [router]);

  const onSubmit = async (data: CountryReportFormData) => {
    setIsLoading(true);
    try {
      const token = localStorage.getItem('token');
      if (!token) {
        router.push('/login');
        return;
      }

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const payload = {
        ...data,
        cityWorkingDays: {
          WARSAW: data.warsawWorkingDays || 0,
          KRAKOW: data.krakowWorkingDays || 0,
          GDANSK: data.gdanskWorkingDays || 0,
          WROCLAW: data.wroc≈ÇawWorkingDays || 0,
          POZNAN: data.poznanWorkingDays || 0,
          LODZ: data.lodzWorkingDays || 0,
        },
        cityEmployeeCounts: {
          WARSAW: data.warsawEmployees || 0,
          KRAKOW: data.krakowEmployees || 0,
          GDANSK: data.gdanskEmployees || 0,
          WROCLAW: data.wroc≈ÇawEmployees || 0,
          POZNAN: data.poznanEmployees || 0,
          LODZ: data.lodzEmployees || 0,
        },
        citySpecialNotes: {
          WARSAW: data.warsawNotes || '',
          KRAKOW: data.krakowNotes || '',
          GDANSK: data.gdanskNotes || '',
          WROCLAW: data.wroc≈ÇawNotes || '',
          POZNAN: data.poznanNotes || '',
          LODZ: data.lodzNotes || '',
        },
      };

      const response = await fetch('/api/country-manager-data', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`,
        },
        body: JSON.stringify(payload),
      });

      const result = await response.json();

      if (response.ok) {
        alert('–û—Ç—á–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
        router.push('/dashboard');
      } else {
        alert(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${result.message}`);
      }
    } catch (error) {
      console.error('Error saving country report:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞');
    } finally {
      setIsLoading(false);
    }
  };

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  const cities = [
    { key: 'warsaw', label: '–í–∞—Ä—à–∞–≤–∞', icon: 'üèõÔ∏è' },
    { key: 'krakow', label: '–ö—Ä–∞–∫–æ–≤', icon: 'üè∞' },
    { key: 'gdansk', label: '–ì–¥–∞–Ω—å—Å–∫', icon: '‚öì' },
    { key: 'wroc≈Çaw', label: '–í—Ä–æ—Ü–ª–∞–≤', icon: 'üåâ' },
    { key: 'poznan', label: '–ü–æ–∑–Ω–∞–Ω—å', icon: 'üè≠' },
    { key: 'lodz', label: '–õ–æ–¥–∑—å', icon: 'üßµ' },
  ];

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <Globe className="h-8 w-8 text-blue-600" />
              <span className="ml-2 text-xl font-bold text-gray-900">
                –û—Ç—á–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ
              </span>
            </div>
            <div className="text-sm text-gray-600">
              –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Å—Ç—Ä–∞–Ω–µ ‚Ä¢ –ü–æ–ª—å—à–∞
            </div>
          </div>
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="bg-white rounded-lg shadow p-6">
          <div className="mb-6">
            <h1 className="text-2xl font-bold text-gray-900">–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å—Ç—Ä–∞–Ω–µ</h1>
            <p className="mt-1 text-sm text-gray-600">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º –≥–æ—Ä–æ–¥–∞–º –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
            </p>
          </div>

          <form onSubmit={handleSubmit(onSubmit)} className="space-y-8">
            {/* –î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <Calendar className="inline h-4 w-4 mr-1" />
                –î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞
              </label>
              <input
                type="date"
                {...register('reportDate', { required: '–î–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' })}
                className="w-full max-w-xs px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              />
              {errors.reportDate && (
                <p className="mt-1 text-sm text-red-600">{errors.reportDate.message}</p>
              )}
            </div>

            {/* –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Å—Ç—Ä–∞–Ω–µ */}
            <div className="p-4 bg-blue-50 rounded-lg">
              <h3 className="text-lg font-medium text-blue-900 mb-4">
                <Globe className="inline h-5 w-5 mr-2" />
                –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ü–æ–ª—å—à–µ
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫–æ-–¥–Ω–µ–π –ø–æ —Å—Ç—Ä–∞–Ω–µ
                  </label>
                  <input
                    type="number"
                    step="0.5"
                    min="0"
                    {...register('totalWorkingDaysCountry', { min: 0 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                  </label>
                  <input
                    type="number"
                    min="0"
                    {...register('totalEmployeesActive', { min: 0 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>
            </div>

            {/* –î–∞–Ω–Ω—ã–µ –ø–æ –≥–æ—Ä–æ–¥–∞–º */}
            <div className="p-4 bg-green-50 rounded-lg">
              <h3 className="text-lg font-medium text-green-900 mb-4">
                <MapPin className="inline h-5 w-5 mr-2" />
                –î–∞–Ω–Ω—ã–µ –ø–æ –≥–æ—Ä–æ–¥–∞–º
              </h3>
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {cities.map((city) => (
                  <div key={city.key} className="bg-white p-4 rounded-lg border">
                    <h4 className="font-medium text-gray-900 mb-3">
                      {city.icon} {city.label}
                    </h4>
                    <div className="space-y-3">
                      <div>
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          –ß–µ–ª–æ–≤–µ–∫–æ-–¥–Ω–∏
                        </label>
                        <input
                          type="number"
                          step="0.5"
                          min="0"
                          {...register(`${city.key}WorkingDays` as any, { min: 0 })}
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-green-500 focus:border-green-500"
                        />
                      </div>
                      <div>
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                        </label>
                        <input
                          type="number"
                          min="0"
                          {...register(`${city.key}Employees` as any, { min: 0 })}
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-green-500 focus:border-green-500"
                        />
                      </div>
                      <div>
                        <label className="block text-xs font-medium text-gray-700 mb-1">
                          –û—Å–æ–±—ã–µ –∑–∞–º–µ—Ç–∫–∏
                        </label>
                        <textarea
                          rows={2}
                          {...register(`${city.key}Notes` as any)}
                          placeholder="–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≥–æ—Ä–æ–¥–∞..."
                          className="w-full px-2 py-1 text-sm border border-gray-300 rounded focus:outline-none focus:ring-green-500 focus:border-green-500"
                        />
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* –û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ */}
            <div className="p-4 bg-purple-50 rounded-lg">
              <h3 className="text-lg font-medium text-purple-900 mb-4">
                <TrendingUp className="inline h-5 w-5 mr-2" />
                –û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —Å—Ç—Ä–∞–Ω–µ
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—Ç—Ä–∞–Ω–µ
                  </label>
                  <input
                    type="number"
                    min="0"
                    {...register('countryTotalOrders', { min: 0 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–º–∞ –ø–æ —Å—Ç—Ä–∞–Ω–µ
                  </label>
                  <input
                    type="number"
                    min="0"
                    {...register('countryTotalHires', { min: 0 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (1-10)
                  </label>
                  <input
                    type="number"
                    step="0.1"
                    min="1"
                    max="10"
                    {...register('countryAvgStress', { min: 1, max: 10 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    % —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞–º–∏
                  </label>
                  <input
                    type="number"
                    step="0.1"
                    min="0"
                    max="100"
                    {...register('countryOvertimeRate', { min: 0, max: 100 })}
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-500 focus:border-purple-500"
                  />
                </div>
              </div>
            </div>

            {/* –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ */}
            <div className="p-4 bg-indigo-50 rounded-lg">
              <h3 className="text-lg font-medium text-indigo-900 mb-4">
                <Target className="inline h-5 w-5 mr-2" />
                –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
              </h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –∑–∞ –Ω–µ–¥–µ–ª—é
                  </label>
                  <textarea
                    rows={3}
                    {...register('marketingCampaigns')}
                    placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
                  </label>
                  <textarea
                    rows={3}
                    {...register('competitorAnalysis')}
                    placeholder="–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –ø–æ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                  />
                </div>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Ü–µ–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
                    </label>
                    <textarea
                      rows={4}
                      {...register('strategicGoals')}
                      placeholder="–û—Å–Ω–æ–≤–Ω—ã–µ —Ü–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏..."
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      <DollarSign className="inline h-4 w-4 mr-1" />
                      –ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç –∑–∞ –Ω–µ–¥–µ–ª—é (PLN)
                    </label>
                    <input
                      type="number"
                      step="0.01"
                      min="0"
                      {...register('budgetSpent', { min: 0 })}
                      className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                    />
                  </div>
                </div>
              </div>
            </div>

            {/* –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è */}
            <div className="p-4 bg-red-50 rounded-lg">
              <h3 className="text-lg font-medium text-red-900 mb-4">
                <AlertTriangle className="inline h-5 w-5 mr-2" />
                –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è
              </h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ–¥–µ–ª–∏
                  </label>
                  <textarea
                    rows={3}
                    {...register('majorIssues')}
                    placeholder="–ö–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-red-500 focus:border-red-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –í–Ω–µ–¥—Ä–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
                  </label>
                  <textarea
                    rows={3}
                    {...register('solutionsImplemented')}
                    placeholder="–ö–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –±—ã–ª–∏ –≤–Ω–µ–¥—Ä–µ–Ω—ã..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-red-500 focus:border-red-500"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    –û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–æ–≤
                  </label>
                  <textarea
                    rows={3}
                    {...register('riskAssessment')}
                    placeholder="–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏ –∏ –ø–ª–∞–Ω –∏—Ö –º–∏—Ç–∏–≥–∞—Ü–∏–∏..."
                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-red-500 focus:border-red-500"
                  />
                </div>
              </div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏
              </label>
              <textarea
                rows={4}
                {...register('notes')}
                placeholder="–õ—é–±–∞—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è..."
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ */}
            <div className="flex justify-between">
              <button
                type="button"
                onClick={() => router.push('/dashboard')}
                className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                type="submit"
                disabled={isLoading}
                className="flex items-center px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50"
              >
                <Save className="h-4 w-4 mr-2" />
                {isLoading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç'}
              </button>
            </div>
          </form>
        </div>
      </main>
    </div>
  );
}
