export const dynamic = 'force-dynamic';

import { NextRequest, NextResponse } from 'next/server';
import { Client } from 'pg';
import { guardDebugEndpoint, logDebugAccess } from '@/lib/debug-guard';

export async function POST(request: NextRequest) {
  const guardError = guardDebugEndpoint();
  if (guardError) return guardError;
  logDebugAccess('/api/debug/migrate-schema-v2', 'POST');
  
  try {
    console.log('üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º —Å—Ö–µ–º—É –∫ –≤–µ—Ä—Å–∏–∏ 2 (–¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –∏ –ø–æ–ª—è)...');

    const DATABASE_URL = process.env.DATABASE_URL;
    if (!DATABASE_URL) {
      throw new Error('DATABASE_URL is not set');
    }

    const client = new Client({
      connectionString: DATABASE_URL,
      ssl: {
        rejectUnauthorized: false,
      },
    });

    await client.connect();

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É weeks
    console.log('üìÖ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É weeks...');
    await client.query(`
      CREATE TABLE IF NOT EXISTS "weeks" (
        "id" SERIAL PRIMARY KEY,
        "iso" TEXT UNIQUE NOT NULL,
        "startDate" TIMESTAMP(3) NOT NULL,
        "endDate" TIMESTAMP(3) NOT NULL,
        "year" INTEGER NOT NULL,
        "weekNum" INTEGER NOT NULL,
        "isActive" BOOLEAN NOT NULL DEFAULT true,
        "createdAt" TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP
      );
    `);

    // 2. –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è weeks
    console.log('üîç –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è weeks...');
    await client.query(`CREATE INDEX IF NOT EXISTS "weeks_year_weekNum_idx" ON "weeks"("year", "weekNum");`);
    await client.query(`CREATE INDEX IF NOT EXISTS "weeks_startDate_endDate_idx" ON "weeks"("startDate", "endDate");`);

    // 3. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ hr_metrics
    console.log('üë• –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ hr_metrics...');
    await client.query(`ALTER TABLE "hr_metrics" ADD COLUMN IF NOT EXISTS "fullDays" INTEGER DEFAULT 0;`);
    await client.query(`ALTER TABLE "hr_metrics" ADD COLUMN IF NOT EXISTS "stress" INTEGER;`);
    await client.query(`ALTER TABLE "hr_metrics" ADD COLUMN IF NOT EXISTS "overtime" BOOLEAN DEFAULT false;`);

    // 4. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ ops_metrics
    console.log('‚öôÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ ops_metrics...');
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "messages" INTEGER DEFAULT 0;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "tickets" INTEGER DEFAULT 0;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "orders" INTEGER DEFAULT 0;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "fullDays" INTEGER DEFAULT 0;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "diffCleaners" TEXT;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "diffClients" TEXT;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "stress" INTEGER;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "overtime" BOOLEAN DEFAULT false;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "sourceMsg" TEXT;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "sourceTkt" TEXT;`);
    await client.query(`ALTER TABLE "ops_metrics" ADD COLUMN IF NOT EXISTS "sourceOrd" TEXT;`);

    // 5. –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    console.log('üöÄ –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è hr_metrics
    await client.query(`CREATE INDEX IF NOT EXISTS "hr_metrics_weekIso_idx" ON "hr_metrics"("weekIso");`);
    await client.query(`CREATE INDEX IF NOT EXISTS "hr_metrics_userId_idx" ON "hr_metrics"("userId");`);
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è ops_metrics
    await client.query(`CREATE INDEX IF NOT EXISTS "ops_metrics_weekIso_idx" ON "ops_metrics"("weekIso");`);
    await client.query(`CREATE INDEX IF NOT EXISTS "ops_metrics_userId_idx" ON "ops_metrics"("userId");`);
    
    // –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è weekly_reports
    await client.query(`CREATE INDEX IF NOT EXISTS "weekly_reports_weekIso_idx" ON "weekly_reports"("weekIso");`);
    await client.query(`CREATE INDEX IF NOT EXISTS "weekly_reports_userId_idx" ON "weekly_reports"("userId");`);

    // 6. –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
    console.log('üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—ã–µ –ø–æ–ª—è...');
    
    // –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ trengoMessages –≤ messages –¥–ª—è ops_metrics
    await client.query(`
      UPDATE "ops_metrics" 
      SET "messages" = COALESCE("trengoMessages", 0),
          "tickets" = COALESCE("trengoTicketsResolved", 0) + COALESCE("crmTicketsResolved", 0),
          "orders" = COALESCE("crmOrdersCity", 0),
          "diffCleaners" = "difficultCleanerCases",
          "diffClients" = "difficultClientCases"
      WHERE "messages" IS NULL OR "messages" = 0;
    `);

    // –ö–æ–ø–∏—Ä—É–µ–º workdays –≤ fullDays –¥–ª—è hr_metrics –∏–∑ weekly_reports
    await client.query(`
      UPDATE "hr_metrics" 
      SET "fullDays" = wr."workdays",
          "stress" = wr."stressLevel",
          "overtime" = wr."overtime"
      FROM "weekly_reports" wr 
      WHERE "hr_metrics"."reportId" = wr.id 
      AND ("hr_metrics"."fullDays" IS NULL OR "hr_metrics"."fullDays" = 0);
    `);

    // –ö–æ–ø–∏—Ä—É–µ–º workdays –≤ fullDays –¥–ª—è ops_metrics –∏–∑ weekly_reports
    await client.query(`
      UPDATE "ops_metrics" 
      SET "fullDays" = wr."workdays",
          "stress" = wr."stressLevel", 
          "overtime" = wr."overtime"
      FROM "weekly_reports" wr 
      WHERE "ops_metrics"."reportId" = wr.id 
      AND ("ops_metrics"."fullDays" IS NULL OR "ops_metrics"."fullDays" = 0);
    `);

    // 7. –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É weeks –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞
    console.log('üìÖ –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É weeks...');
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ ISO –Ω–µ–¥–µ–ª—å (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    const currentYear = new Date().getFullYear();
    for (let week = 1; week <= 53; week++) {
      const weekIso = `${currentYear}-W${String(week).padStart(2, '0')}`;
      
      // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç –¥–∞—Ç (–¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É)
      const yearStart = new Date(currentYear, 0, 1);
      const weekStart = new Date(yearStart);
      weekStart.setDate(yearStart.getDate() + (week - 1) * 7);
      
      // –ù–∞—Ö–æ–¥–∏–º –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
      const dayOfWeek = weekStart.getDay();
      const mondayOffset = dayOfWeek === 0 ? -6 : 1 - dayOfWeek;
      weekStart.setDate(weekStart.getDate() + mondayOffset);
      
      const weekEnd = new Date(weekStart);
      weekEnd.setDate(weekStart.getDate() + 6);
      
      await client.query(`
        INSERT INTO "weeks" ("iso", "startDate", "endDate", "year", "weekNum")
        VALUES ($1, $2, $3, $4, $5)
        ON CONFLICT ("iso") DO NOTHING;
      `, [weekIso, weekStart.toISOString(), weekEnd.toISOString(), currentYear, week]);
    }

    // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –º–∏–≥—Ä–∞—Ü–∏–∏...');
    
    const hrColumns = await client.query(`
      SELECT column_name FROM information_schema.columns 
      WHERE table_name = 'hr_metrics' AND column_name IN ('fullDays', 'stress', 'overtime')
      ORDER BY column_name;
    `);

    const opsColumns = await client.query(`
      SELECT column_name FROM information_schema.columns 
      WHERE table_name = 'ops_metrics' AND column_name IN ('messages', 'tickets', 'orders', 'fullDays', 'stress', 'overtime')
      ORDER BY column_name;
    `);

    const indexes = await client.query(`
      SELECT tablename, indexname FROM pg_indexes 
      WHERE tablename IN ('hr_metrics', 'ops_metrics', 'weekly_reports', 'weeks')
      AND indexname LIKE '%_idx'
      ORDER BY tablename, indexname;
    `);

    const weeksCount = await client.query(`SELECT COUNT(*) as count FROM "weeks" WHERE "year" = $1;`, [currentYear]);

    await client.end();

    return NextResponse.json({
      success: true,
      message: '–ú–∏–≥—Ä–∞—Ü–∏—è —Å—Ö–µ–º—ã v2 –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
      details: {
        hr_new_columns: hrColumns.rows,
        ops_new_columns: opsColumns.rows,
        new_indexes: indexes.rows,
        weeks_created: weeksCount.rows[0].count,
      },
      steps_completed: [
        '‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ weeks —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏',
        '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–ª—è fullDays, stress, overtime –≤ hr_metrics',
        '‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤ ops_metrics',
        '‚úÖ –°–æ–∑–¥–∞–Ω—ã –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ weekIso –∏ userId',
        '‚úÖ –î–∞–Ω–Ω—ã–µ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π –≤ –Ω–æ–≤—ã–µ',
        `‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ weeks –Ω–∞ ${currentYear} –≥–æ–¥`,
      ],
      performance_improvements: [
        'üöÄ –ó–∞–ø—Ä–æ—Å—ã –ø–æ –Ω–µ–¥–µ–ª—è–º –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –±—ã—Å—Ç—Ä–µ–µ',
        'üöÄ –ó–∞–ø—Ä–æ—Å—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —É—Å–∫–æ—Ä–µ–Ω—ã',
        'üöÄ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ø–µ—Ä–∏–æ–¥–∞–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞',
      ]
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ v2:', error);
    return NextResponse.json(
      {
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error',
        debug: error
      },
      { status: 500 }
    );
  }
}
