import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  try {
    console.log('üìä === –§–ò–ù–ê–õ–¨–ù–´–ô –ê–£–î–ò–¢ –ü–û–°–õ–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô ===\n');
    
    const cities = await prisma.cityInfo.count();
    const users = await prisma.user.count();
    const agg = await prisma.countryAggregate.count();
    const cui = await prisma.countryUserInput.count();
    const tm = await prisma.teamMeeting.count();
    const wr = await prisma.weeklyReport.count();
    
    console.log('üìç CityInfo:', cities);
    console.log('üë• User:', users);
    console.log('üìä CountryAggregate:', agg);
    console.log('üìã CountryUserInput:', cui);
    console.log('ü§ù TeamMeeting:', tm);
    console.log('üìÑ WeeklyReport:', wr);
    
    console.log('\n‚úÖ –°—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏:');
    console.log(`  ${agg > 0 ? '‚úÖ' : '‚ö†Ô∏è '} Country aggregates (–≥—Ä–∞—Ñ–∏–∫–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤) - ${agg > 0 ? '–û–ö' : '–ü–£–°–¢–û'}`);
    console.log(`  ${tm > 0 ? '‚úÖ' : '‚ö†Ô∏è '} Team meetings (–≤—Å—Ç—Ä–µ—á–∏) - ${tm > 0 ? '–û–ö' : '–ü–£–°–¢–û'}`);
    console.log(`  ${cui > 0 ? '‚úÖ' : '‚ö†Ô∏è '} Country user inputs (–≤–≤–æ–¥ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤) - ${cui > 0 ? '–û–ö' : '–ü–£–°–¢–û'}`);
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

main();
