// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  HIRING_MANAGER       // Менеджер по найму
  OPS_MANAGER          // Операционный менеджер  
  MIXED_MANAGER        // Смешанная роль (найм + операции)
  COUNTRY_MANAGER      // Менеджер по стране
  ADMIN                // Администратор
}

enum City {
  WARSAW
  KRAKOW
  GDANSK
  WROCLAW
  POZNAN
  LODZ
  LUBLIN
  KATOWICE
  BYDGOSZCZ
  SZCZECIN
  TORUN
  RADOM
  RZESZOW
  OLSZTYN
  BIALYSTOK
}

// Основная таблица пользователей
model User {
  id        String   @id @default(cuid())
  login     String   @unique  // Логин (не email)
  password  String   // Хешированный пароль
  email     String?  // Email не обязателен
  name      String   // Имя пользователя
  role      Role     // Роль пользователя
  city      City     // Город (задается админом, readonly для пользователя)
  salaryGross Float? @map("salaryGross") // Зарплата (может быть не указана)
  salaryNet Float? @map("salaryNet") // Зарплата (может быть не указана)
  currency  String   @default("PLN") // Валюта зарплаты
  isActive  Boolean  @default(true) // Статус: активен/архив
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Связанные данные
  weeklyReports    WeeklyReport[]
  hrMetrics        HrMetrics[]
  opsMetrics       OpsMetrics[]
  countryUserInputs CountryUserInput[]
  userSchedules   UserSchedule[]
  userScheduleExceptions UserScheduleException[]
  workSchedules   WorkSchedule[]
  employeeProfile EmployeeProfile?
  teamCallAttendees TeamCallAttendee[]

  @@map("users")
}

// Справочник городов
model CityInfo {
  id        Int      @id @default(autoincrement())
  code      City     @unique
  name      String   // Название города на русском
  timezone  String   @default("Europe/Warsaw")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  // Связанные данные
  countryAggregates CountryAggregate[]
  teamCallSlots TeamCallSlot[]

  @@map("cities")
}

// Справочник недель для быстрых запросов
model Week {
  id        Int      @id @default(autoincrement())
  iso       String   @unique // "2025-W38"
  startDate DateTime // Понедельник
  endDate   DateTime // Воскресенье
  year      Int      // 2025
  weekNum   Int      // 38
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())

  @@index([year, weekNum])
  @@index([startDate, endDate])
  @@map("weeks")
}

// Еженедельные отчеты
model WeeklyReport {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Период отчета
  weekIso       String   // ISO неделя (например, "2024-W15")
  weekStartDate DateTime // Понедельник
  weekEndDate   DateTime // Воскресенье
  
  // Общие поля для всех ролей
  workdays      Float    @default(0) // Отработанные дни (0-7)
  stressLevel   Int      @default(0) // Уровень стресса (0-10)
  overtime      Boolean  @default(false) // Переработки (флаг)
  overtimeHours Float?   // Часы переработки
  
  // График на следующую неделю (JSON)
  nextWeekSchedule Json?  // { "monday": "9:00-18:00", "tuesday": "9:00-18:00", ... }
  
  // Работа с командой
  goodWorkWith  String?  // С кем хорошо работалось (текст)
  badWorkWith   String?  // С кем плохо работалось (текст)
  teamComment   String?  // Комментарий к работе с командой
  
  // Заметки
  notes         String?  // Дополнительные заметки
  
  // Статус
  isCompleted   Boolean  @default(false)
  submittedAt   DateTime?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Связанные метрики
  hrMetrics     HrMetrics?
  opsMetrics    OpsMetrics?

  @@unique([userId, weekIso])
  @@map("weekly_reports")
}

// HR метрики (для ролей HR и MIXED)
model HrMetrics {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reportId         String   @unique
  report           WeeklyReport @relation(fields: [reportId], references: [id], onDelete: Cascade)
  weekIso          String   // Денормализованное поле для удобства запросов
  
  // HR метрики
  interviews       Int      @default(0) // Количество собеседований
  jobPosts         Int      @default(0) // Количество объявлений
  registrations    Int      @default(0) // Количество регистраций
  fullDays         Int      @default(0) // Отработанные дни
  difficultCases   String?  // Сложные ситуации (текст)
  
  // Дополнительные поля
  stress           Int?     // Уровень стресса 0-10
  overtime         Boolean  @default(false) // Переработки
  
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@unique([userId, weekIso])
  @@index([weekIso])  // Индекс для быстрых запросов по неделе
  @@index([userId])   // Индекс для быстрых запросов по пользователю
  @@map("hr_metrics")
}

// Операционные метрики (для ролей OPERATIONS и MIXED)
model OpsMetrics {
  id                      String   @id @default(cuid())
  userId                  String
  user                    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  reportId                String   @unique
  report                  WeeklyReport @relation(fields: [reportId], references: [id], onDelete: Cascade)
  weekIso                 String   // Денормализованное поле для удобства запросов
  
  // Основные Ops метрики (упрощенные названия)
  messages                Int      @default(0) // Сообщения (Trengo)
  tickets                 Int      @default(0) // Решенные тикеты (Trengo + CRM)
  orders                  Int      @default(0) // Заказы города
  fullDays                Int      @default(0) // Отработанные дни
  
  // Сложные ситуации (упрощенные названия)
  diffCleaners            String?  // Сложные ситуации с клинерами
  diffClients             String?  // Сложные ситуации с клиентами
  
  // Дополнительные поля
  stress                  Int?     // Уровень стресса 0-10
  overtime                Boolean  @default(false) // Переработки
  
  // Источники данных (для отслеживания автозаполнения)
  sourceMsg               String?  // 'api'|'manual' для messages
  sourceTkt               String?  // 'api'|'manual' для tickets
  sourceOrd               String?  // 'api'|'manual' для orders
  
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  @@unique([userId, weekIso])
  @@index([weekIso])    // Индекс для быстрых запросов по неделе
  @@index([userId])     // Индекс для быстрых запросов по пользователю
  @@map("ops_metrics")
}

// Агрегированные данные по городам (заполняет менеджер по стране)
model CountryAggregate {
  id                  Int      @id @default(autoincrement())
  weekIso             String
  cityId              Int
  trengoResponses     Int      @default(0)   // ответы (по городу суммарно)
  crmComplaintsClosed Int      @default(0)   // жалобы закрытые (по городу суммарно)
  trengoTickets       Int      @default(0)   // тикеты (по городу суммарно)
  hiredPeople         Int      @default(0)   // нанятые (по городу)
  cityOrders          Int      @default(0)   // заказы (по городу)
  // Новые поля для расширенной функциональности
  trengoMessages      Int      @default(0)   // общее количество сообщений Trengo
  hiredHR             Int      @default(0)   // нанятые HR
  hiredOps           Int      @default(0)    // нанятые Ops
  hiredMixed          Int      @default(0)   // нанятые Mixed
  notes               String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  city                CityInfo @relation(fields: [cityId], references: [id])

  @@unique([weekIso, cityId])
  @@index([weekIso])
  @@map("country_aggregates")
}

// Ввод данных по конкретным менеджерам (заполняет менеджер по стране)
model CountryUserInput {
  id                  Int      @id @default(autoincrement())
  weekIso             String
  userId              String   // только для OPS_MANAGER и MIXED_MANAGER
  trengoResponses     Int      @default(0)   // «сколько отвечал» в Trengo
  trengoTickets       Int      @default(0)   // тикеты Trengo на нём
  crmComplaintsClosed Int      @default(0)   // закрытые жалобы (на нём)
  ordersHandled       Int      @default(0)   // (если хотите фиксировать по людям)
  notes               String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  user                User     @relation(fields: [userId], references: [id])

  @@unique([weekIso, userId])
  @@index([weekIso])
  @@map("country_user_inputs")
}

// График работы пользователя (шаблон недели)
model UserSchedule {
  id        Int      @id @default(autoincrement())
  userId    String
  weekday   Int
  startMin  Int
  endMin    Int
  location  String?
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, weekday])
  @@index([userId])
}

model WorkSchedule {
  id             Int      @id @default(autoincrement())
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  weekStartDate  DateTime
  weekEndDate    DateTime
  mondayStart    String?
  mondayEnd      String?
  mondayNote     String?
  tuesdayStart   String?
  tuesdayEnd     String?
  tuesdayNote    String?
  wednesdayStart String?
  wednesdayEnd   String?
  wednesdayNote  String?
  thursdayStart  String?
  thursdayEnd    String?
  thursdayNote   String?
  fridayStart    String?
  fridayEnd      String?
  fridayNote     String?
  saturdayStart  String?
  saturdayEnd    String?
  saturdayNote   String?
  sundayStart    String?
  sundayEnd      String?
  sundayNote     String?
  weeklyNotes    String?
  isFlexible     Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([userId, weekStartDate])
  @@map("work_schedules")
}

// Командные звонки со слотами и участниками
model TeamCallSlot {
  id        Int      @id @default(autoincrement())
  weekIso   String
  cityId    Int
  team      String?  // 'HR' | 'OPS' | 'ALL'
  weekday   Int      // 1..7
  date      DateTime
  startMin  Int
  endMin    Int
  title     String
  linkUrl   String?
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  city      CityInfo @relation(fields: [cityId], references: [id])
  attendees TeamCallAttendee[]

  @@index([weekIso, cityId])
  @@map("team_call_slots")
}

model TeamCallAttendee {
  id     Int    @id @default(autoincrement())
  slotId Int
  userId String
  slot   TeamCallSlot @relation(fields: [slotId], references: [id], onDelete: Cascade)
  user   User        @relation(fields: [userId], references: [id])
  
  @@unique([slotId, userId])
  @@map("team_call_attendees")
}

// Профили сотрудников - стаж и зарплаты
model EmployeeProfile {
  id          Int      @id @default(autoincrement())
  userId      String   @unique
  yearsWorked Int?
  salaryGross Int?
  salaryNet   Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])

  @@map("employee_profiles")
}

// Исключения к графику (конкретные даты)
model UserScheduleException {
  id        Int      @id @default(autoincrement())
  userId    String
  date      DateTime
  startMin  Int?
  endMin    Int?
  location  String?
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, date])
  @@index([userId, date])
}

// Настройки системы
model Settings {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  category  String   @default("general")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("settings")
}

// AI анализ и инсайты
model AiAnalysis {
  id            String   @id @default(cuid())
  type          String   // "summary", "notification", "anomaly", "comparison"
  title         String
  description   String
  severity      String   @default("info") // info, warning, critical
  
  // Целевые данные
  targetUserId  String?
  targetCity    String?
  weekIso       String
  
  // Результаты анализа
  insights      Json     // Структурированные инсайты
  recommendations String?
  
  // Статус
  isNotified    Boolean  @default(false)
  notifiedAt    DateTime?
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("ai_analysis")
}

// Отчеты
model Report {
  id          String   @id @default(cuid())
  type        String   // "personal", "city", "country", "comparison"
  title       String
  description String?
  
  // Фильтры
  dateFrom    DateTime
  dateTo      DateTime
  cities      Json?    // Массив городов
  userIds     Json?    // Массив ID пользователей
  
  // Данные отчета
  data        Json     // Структурированные данные
  summary     String?  // AI резюме
  
  // Экспорт
  exportFormats Json?  // ["csv", "xlsx", "pdf"]
  
  generatedBy String   // ID пользователя
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("reports")
}
