// –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API –∫–ª—é—á–∞
import { config } from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º .env
config({ path: join(__dirname, '.env') });

const OPENAI_API_KEY = process.env.OPENAI_API_KEY;

console.log('üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI API –∫–ª—é—á–∞...\n');

if (!OPENAI_API_KEY) {
  console.log('‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env');
  process.exit(1);
}

console.log(`‚úÖ –ö–ª—é—á –Ω–∞–π–¥–µ–Ω: ${OPENAI_API_KEY.substring(0, 20)}...`);
console.log('üì° –ü—Ä–æ–≤–µ—Ä—è—é –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–ª—é—á–∞...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
try {
  const response = await fetch('https://api.openai.com/v1/models', {
    headers: {
      'Authorization': `Bearer ${OPENAI_API_KEY}`
    }
  });

  if (response.ok) {
    const data = await response.json();
    console.log('‚úÖ OpenAI API –∫–ª—é—á –≤–∞–ª–∏–¥–µ–Ω!');
    console.log(`üìä –î–æ—Å—Ç—É–ø–Ω–æ –º–æ–¥–µ–ª–µ–π: ${data.data.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ gpt-4o-mini
    const hasGPT4Mini = data.data.some(m => m.id === 'gpt-4o-mini');
    if (hasGPT4Mini) {
      console.log('‚úÖ –ú–æ–¥–µ–ª—å gpt-4o-mini –¥–æ—Å—Ç—É–ø–Ω–∞');
    } else {
      console.log('‚ö†Ô∏è  –ú–æ–¥–µ–ª—å gpt-4o-mini –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    console.log('\nüéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ AI –æ—Ç—á–µ—Ç–æ–≤!');
  } else {
    const error = await response.json();
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∫–ª—é—á–∞:');
    console.log(error);
    
    if (response.status === 401) {
      console.log('\nüí° –ö–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∞ https://platform.openai.com/api-keys');
    } else if (response.status === 429) {
      console.log('\nüí° –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ https://platform.openai.com/usage');
    }
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ OpenAI API:');
  console.log(error.message);
  console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
}



